"""Remove Feedback table and update others

Revision ID: beacebcd965f
Revises: 564525bf3300
Create Date: 2025-09-25 11:19:41.616472

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'beacebcd965f'
down_revision: Union[str, None] = '564525bf3300'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('global_interval', sa.Integer(), nullable=False),
    sa.Column('first_pairing_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_pairing_on', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('id = 1', name='settings_singleton'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('feedback')
    op.drop_table('settings')
    op.alter_column('notification', 'sent_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('notification', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('pair', 'paired_at',
                    new_column_name='created_at',
                    existing_type=sa.DateTime(timezone=True),
                    existing_nullable=False)
    op.alter_column('pair', 'created_at',
                    server_default=sa.text('now()'),
                    existing_type=sa.DateTime(timezone=True),
                    existing_nullable=False)
    op.drop_column('pair', 'feedback_sent')
    op.alter_column('user', 'joined_at',
                    new_column_name='created_at',
                    existing_type=sa.DateTime(timezone=True),
                    existing_nullable=False)
    op.alter_column('user', 'created_at',
                    server_default=sa.text('now()'),
                    existing_type=sa.DateTime(timezone=True),
                    existing_nullable=False)
    op.drop_column('user', 'future_meeting')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'created_at',
                    server_default=None,
                    existing_type=sa.DateTime(timezone=True),
                    existing_nullable=False)
    op.alter_column('user', 'created_at',
                    new_column_name='joined_at',
                    existing_type=sa.DateTime(timezone=True),
                    existing_nullable=False)
    op.add_column('user', sa.Column('future_meeting', sa.INTEGER(), autoincrement=False, nullable=True))

    op.alter_column('pair', 'created_at',
                    server_default=None,
                    existing_type=sa.DateTime(timezone=True),
                    existing_nullable=False)
    op.alter_column('pair', 'created_at',
                    new_column_name='paired_at',
                    existing_type=sa.DateTime(timezone=True),
                    existing_nullable=False)
    op.add_column('pair', sa.Column('feedback_sent', sa.BOOLEAN(), autoincrement=False, nullable=True))

    op.alter_column('notification', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('notification', 'sent_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.create_table('settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_matching_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('auto_pairing_paused', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='settings_pkey'),
    sa.UniqueConstraint('key', name='settings_key_key')
    )
    op.create_table('feedback',
    sa.Column('pair_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('did_meet', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('submitted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['pair_id'], ['pair.id'], name='feedback_pair_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='feedback_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='feedback_pkey')
    )
    op.drop_table('setting')
    # ### end Alembic commands ###
